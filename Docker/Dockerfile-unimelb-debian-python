FROM debian:stretch-20190228-slim
ENV VERSION 1.08
MAINTAINER Louis Moresi

## the update is fine but very slow ... keep it separated so it doesn't
## get run again and break the cache. The later parts of this build
## may be sensitive to later versions being picked up in the install phase.

RUN apt-get update -y ;

RUN DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends --fix-missing \
        bash-completion \
        build-essential

RUN DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends --fix-missing \
        git \
        python3 \
        python3-dev \
        python3-pip \
        ssh \
        curl \
        rsync \
        less \
        zip

## These are for the full python - scipy stack

RUN DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    libopenblas-dev \
    liblapack-dev \
    libscalapack-mpi-dev \
    libhdf5-serial-dev \
    libnetcdf-dev \
    libfreetype6-dev \
    libpng-dev \
    libtiff-dev \
    libxft-dev \
    xvfb \
    freeglut3 \
    freeglut3-dev \
    libgl1-mesa-dri \
    libgl1-mesa-glx \
    libavcodec-dev \
    libavformat-dev \
    libavutil-dev \
    libswscale-dev \
    gfortran \
    cython \
    libfreetype6-dev \
    python3-nose \
    pkg-config \
    python3-gdal \
    python3-pil  \
    python3-h5py \
    libxml2-dev \
    python3-lxml \
    libgeos-dev \
    xauth \
    pandoc \
    libgdal-dev \
    gdal-bin \
    libproj-dev \
    && rm -rf /var/lib/apt/lists/*


## The recent netcdf4 / pythonlibrary stuff doesn't work properly with the default search paths etc
## here is a fix which builds the repo version. Hoping that pip install or apt-get install will work again soon

# RUN USE_SETUPCFG=0 HDF5_INCDIR=/usr/include/hdf5/serial HDF5_LIBDIR=/usr/lib/x86_64-linux-gnu/hdf5/serial pip install git+https://github.com/Unidata/netcdf4-python

RUN pip3 install --upgrade setuptools pip
RUN pip3 install --upgrade \
              appdirs \
              packaging \
              ipython \
            numpy scipy \
            matplotlib \
            pyproj \
            obspy \
            seaborn \
            pandas \
            jupyter \
            jupyterlab


RUN pip3 install --no-binary :all: shapely
RUN pip3 install --upgrade cartopy

#            https://github.com/ipython-contrib/jupyter_contrib_nbextensions/tarball/master \
#            jupyter_nbextensions_configurator

# pip version won't run with required proj4 version

# RUN jupyter contrib nbextension install --system && \
#     jupyter nbextensions_configurator enable --system


RUN pip3 install mkdocs mkdocs-bootswatch pymdown-extensions \
                stripy \
                litho1pt0


RUN DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
                xauth \
                pandoc


## These break the current installation of lavavu so we simply remove them

RUN DEBIAN_FRONTEND=noninteractive apt-get remove -y --no-install-recommends \
                    libavcodec-dev \
                    libavformat-dev \
                    libavutil-dev

# script for xvfb-run.  all docker commands will effectively run under this via the entrypoint
RUN printf "#\041/bin/sh \n rm -f /tmp/.X99-lock && xvfb-run -s '-screen 0 1600x1200x16' \$@" >> /usr/local/bin/xvfbrun.sh && \
                        chmod +x /usr/local/bin/xvfbrun.sh

RUN pip install lavavu

# RUN pip install netcdf

# Jovyan user / group

ENV NB_USER jovyan
ENV NB_UID 1000
ENV HOME /home/${NB_USER}

# This may be in the previous images ...

RUN adduser --disabled-password \
    --gecos "Default user" \
    --uid ${NB_UID} \
    ${NB_USER} || true  # dont worry about the error ... keep building

RUN addgroup jovyan  || true
RUN usermod -a -G jovyan jovyan || true

# Add Tini

EXPOSE 8888

ENV TINI_VERSION v0.8.4
ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /usr/local/bin/tini
RUN chmod +x /usr/local/bin/tini
ENV PATH /usr/local/bin:${PATH}
